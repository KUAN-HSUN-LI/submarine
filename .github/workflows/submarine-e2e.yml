name: submarine-e2e

on: [push]

env:
  VERSION: "0.6.0-SNAPSHOT"
  HADOOP_VERSION: "2.9"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Check version
        run: |
          mvn --version
          java -version
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/com1
          key: ${{ runner.os }}-maven-com-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-com-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/org
          key: ${{ runner.os }}-maven-org-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-org-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/net
          key: ${{ runner.os }}-maven-net-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-net-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/io
          key: ${{ runner.os }}-maven-io-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-io-
      - name: Build with Maven
        run: |
          export MAVEN_OPTS="-Xmx2g -XX:ReservedCodeCacheSize=512m  -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          mvn --no-transfer-progress -DskipTests install
      - name: Store build binary
        uses: actions/upload-artifact@v2
        with:
          name: submarine-bin
          path: submarine-dist/target/submarine-dist*.tar.gz
  submarine-submitter:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        hadoop-version: ["2.9", "2.10", "3.1", "3.2"]
      fail-fast: false
    # services:
    #   mysql:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_ROOT_PASSWORD: "password"
    #     ports:
    #       - 3306:3306
    #     options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 10s --health-retries 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      # - name: Set up Protobuf 3.10.1
      #   uses: arduino/setup-protoc@v1
      #   with:
      #     version: "3.10.1"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Check version
        run: |
          mvn --version
          java -version
      # - name: Prepate default mysql-data
      #   run: |
      #     python3 -V
      #     pip install mysql-connector-python
      #     python3 ./dev-support/database/init-database.py
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/com1
          key: ${{ runner.os }}-maven-com-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-com-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/org
          key: ${{ runner.os }}-maven-org-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-org-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/net
          key: ${{ runner.os }}-maven-net-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-net-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/io
          key: ${{ runner.os }}-maven-io-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-io-
      - name: Build
        env:
          BUILD_FLAG: "clean install -DskipTests -DskipRat -ntp"
          MODULES: "-pl !:submarine-submitter-k8s,!:submarine-workbench,!:submarine-workbench-web,!:submarine-cloud,!:submarine-dist"
          PROFILE: "-Phadoop-${{ matrix.hadoop-version }}"
        run: |
          export MAVEN_OPTS="-Xmx2g -XX:ReservedCodeCacheSize=1024m  -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          echo ">>> mvn $BUILD_FLAG $MODULES $PROFILE -B"
          mvn $BUILD_FLAG $MODULES $PROFILE -B
      - name: Test
        env:
          TEST_FLAG: "test -DskipRat -am -ntp"
          TEST_MODULES: -pl !:submarine-submitter-k8s,!:submarine-workbench,!:submarine-workbench-web,!:submarine-cloud,!:submarine-commons-cluster,!:submarine-commons-metastore,!:submarine-commons-rpc,!:submarine-commons-runtime,!:submarine-commons-utils,!:submarine-dist,!:submarine-test,!:submarine-test-e2e,!:submarine-test-k8s,!:submarine-all,!:submarine-server-api,!:submarine-server-core,!:submarine-server-rpc,!:submarine-spark-security
          PROFILE: "-Phadoop-${{ matrix.hadoop-version }}"
          TEST_PROJECTS: ""
        run: |
          echo ">>> mvn $TEST_FLAG $TEST_MODULES $PROFILE -B $TEST_PROJECTS"
          mvn $TEST_FLAG $TEST_MODULES $PROFILE -B $TEST_PROJECTS

  Submarine-e2e:
    runs-on: ubuntu-latest
    needs: [build]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: "password"
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 10s --health-retries 10
      submarine-server:
        image: apache/submarine:server-0.6.0-SNAPSHOT
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Set up Protobuf 3.10.1
        uses: arduino/setup-protoc@v1
        with:
          version: "3.10.1"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Set up Chrome latest
        uses: browser-actions/setup-chrome@latest
      - name: Check version
        run: |
          mvn --version
          java -version
          chrome --version
      - name: Prepate default mysql-data
        run: |
          python3 -V
          pip install mysql-connector-python
          python3 ./dev-support/database/init-database.py
      - name: Download compiled Submarine binaries
        uses: actions/download-artifact@v2
        with:
          name: submarine-bin
      - name: Untar binaries
        run: |
          mkdir -p submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
          tar zxvf submarine-dist*.tar.gz -C submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
          sudo chmod -R a+rwX submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
      - name: Test
        env:
          TEST_FLAG: "verify -DskipRat -ntp -am"
          TEST_MODULES: "-pl org.apache.submarine:submarine-test-e2e"
          PROFILE: "-Phadoop-2.9"
          TEST_PROJECTS: ""
        run: |
          mvn $TEST_FLAG $TEST_MODULES $PROFILE -B $TEST_PROJECTS
