name: submarine-e2e

on: [push]

env:
  VERSION: "0.6.0-SNAPSHOT"
  HADOOP_VERSION: "2.9"
  PROFILE: "-Phadoop-2.9"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Check version
        run: |
          mvn --version
          java -version
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        env:
          BUILD_FLAG: "clean install -DskipTests"
        run: |
          echo ">>> mvn $BUILD_FLAG ${PROFILE} -B"
          mvn $BUILD_FLAG ${PROFILE} -B
      - name: Store build binary
        uses: actions/upload-artifact@v2
        with:
          name: submarine-bin
          path: submarine-dist/target/submarine-dist*.tar.gz
  Submarine-e2e:
    runs-on: ubuntu-latest
    needs: [build]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: "password"
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 10s --health-retries 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Set up Chrome latest
        uses: browser-actions/setup-chrome@latest
      - name: Check version
        run: |
          mvn --version
          java -version
          chrome --version
      - name: Prepate default mysql-data
        run: |
          python3 -V
          pip install mysql-connector-python
          python3 ./dev-support/database/init-database.py
      - name: Download compiled Submarine binaries
        uses: actions/download-artifact@v2
        with:
          name: submarine-bin
      - name: Untar binaries
        run: |
          mkdir -p submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
          tar zxvf submarine-dist*.tar.gz -C submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
          mv submarine-dist*.tar.gz submarine-dist/target/
          sudo chmod -R a+rwX submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
      - name: Test
        env:
          TEST_FLAG: "verify -DskipRat -ntp -am"
          TEST_MODULES: "-pl org.apache.submarine:submarine-test-e2e"
        run: |
          echo ">>> mvn ${TEST_FLAG} ${TEST_MODULES} ${PROFILE} -B"
          mvn ${TEST_FLAG} ${TEST_MODULES} ${PROFILE} -B
  submarine-k8s:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 40960
          swap-size-mb: 5120
          remove-dotnet: "true"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Create kind cluster
        run: |
          kind create cluster --config ./dev-support/github-actions/kind-config-kind.yaml --wait 3m
      - name: Check version
        run: |
          mvn --version
          java -version
          helm version
      - name: Show K8s cluster information
        run: |
          kubectl cluster-info
          kubectl version
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          export KUBECONFIG=~/.kube/kind-config-kind
          kind export kubeconfig --kubeconfig ${KUBECONFIG}
      - name: Start submarine
        run: |
          # Fix submarine-database start failed in kind. https://github.com/kubernetes/minikube/issues/7906
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
          helm install --wait submarine ./helm-charts/submarine
          kubectl get pods
          kubectl port-forward svc/submarine-database 3306:3306 &
          kubectl port-forward svc/submarine-server 8080:8080 &
          kubectl port-forward svc/submarine-minio-service 9000:9000 &
          kubectl port-forward svc/submarine-mlflow-service 5001:5000 &
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download compiled Submarine binaries
        uses: actions/download-artifact@v2
        with:
          name: submarine-bin
      - name: Untar binaries
        run: |
          mkdir -p submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
          tar zxvf submarine-dist*.tar.gz -C submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
          mv submarine-dist*.tar.gz submarine-dist/target/
          sudo chmod -R a+rwX submarine-dist/target/submarine-dist-${VERSION}-hadoop-${HADOOP_VERSION}
      - name: Test
        env:
          TEST_FLAG: "verify -DskipRat -ntp -am -Durl=http://127.0.0.1"
          TEST_MODULES: "!:submarine-server-api,!:submarine-server-core,!:submarine-server-rpc,!:submarine-commons-cluster,!:submarine-commons-metastore,!:submarine-commons-rpc,!:submarine-commons-runtime,!:submarine-commons-utils,!:submarine-client,:submarine-test-k8s"
          TEST_PROJECTS: ""
        run: |
          echo ">>> mvn ${TEST_FLAG} ${TEST_MODULES} ${PROFILE} -B"
          mvn verify -DskipRat -am -Durl=http://127.0.0.1 -pl !:submarine-server-api,!:submarine-server-core,!:submarine-server-rpc,!:submarine-commons-cluster,!:submarine-commons-metastore,!:submarine-commons-rpc,!:submarine-commons-runtime,!:submarine-commons-utils,!:submarine-client,:submarine-test-k8s -Phadoop-2.9 -B
      - name: Failure status
        run: |
          kubectl get pods
          kubectl -n default get events --sort-by='{.lastTimestamp}'
          echo "Free space:"
          df -h
          kubectl describe nodes